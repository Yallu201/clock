{"version":3,"sources":["components/Container.jsx","components/Dot.jsx","util/getTimeFormat.js","util/getAngle.js","components/Frame.jsx","components/NiddleHour.jsx","components/NiddleMinute.jsx","components/NiddleSecond.jsx","modules/time.js","App.js","hooks/useClock.js","reportWebVitals.js","modules/index.js","index.js"],"names":["Wrap","styled","div","Content","Container","children","Stick","n","Dot","getTimeFormat","time","prefix","hour","minute","second","getAngle","type","numbers","ToolTip","CenterDot","Frame","myTime","useSelector","_","frameElement","useRef","tooltipElement","useEffect","current","addEventListener","e","style","left","pageX","top","pageY","ref","map","className","NiddleHour","angle","Area","Top","Line","Bottom","React","memo","NiddleMinute","NiddleSecond","SET_TIME","setTime","createAction","date","nowDate","Date","initialState","getHours","getMinutes","getSeconds","reducer","handleActions","state","nextDate","payload","TYPE","App","dispatch","useDispatch","initialTime","useState","setInterval","useClock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82e86a02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <Wrap>\r\n      <Content>{children}</Content>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst Dot = ({ n }) => {\r\n  return <Stick n={n} />;\r\n};\r\nconst Stick = styled.div`\r\n  position: absolute;\r\n  top: 248px;\r\n  left: 235px;\r\n  width: 30px;\r\n  height: 4px;\r\n  background: black;\r\n  border-radius: 10px;\r\n  transform: ${({ n }) => `rotate(${n * 30}deg)`} translate(235px);\r\n`;\r\nexport default Dot;\r\n","export default function getTimeFormat(time) {\r\n  const prefix = time.hour >= 12 ? \"오후\" : \"오전\";\r\n  const hour = `${time.hour - (time.hour > 12 ? 12 : 0)}`;\r\n  const minute = time.minute < 10 ? `0${time.minute}` : `${time.minute}`;\r\n  const second = time.second < 10 ? `0${time.second}` : `${time.second}`;\r\n  return `${prefix} ${hour}:${minute}:${second}`;\r\n}\r\n","export default function getAngle(time, type) {\r\n  const [HOUR, MINUTE, SECOND] = [0, 1, 2];\r\n  const { hour, minute, second } = time;\r\n  /**\r\n   * 1시간: 360/12 = 30도\r\n   * 1분:  30/\r\n   */\r\n  switch (type) {\r\n    case HOUR:\r\n      // 1hour in 12h: 360deg/12h => 30deg\r\n      const hour_ = hour - (hour > 12 ? 12 : 0);\r\n      // 1minute in 1hour : 30deg/60m => 0.5deg\r\n      return hour_ * 30 + minute * 0.5;\r\n    case MINUTE:\r\n      // 1minute in 1hour : 360deg/60m => 6deg\r\n      // 1second in 1minute : 6deg/60s => 0.1deg\r\n      return minute * 6 + second * 0.1;\r\n    case SECOND:\r\n      // 1second in 1minute : 360deg/60s => 6deg\r\n      return second * 6;\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Dot from \"./Dot\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTimeFormat } from \"../util\";\r\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\nconst Frame = ({ children }) => {\r\n  const myTime = useSelector((_) => _.time);\r\n  const frameElement = useRef(null);\r\n  const tooltipElement = useRef(null);\r\n  useEffect(() => {\r\n    if (!frameElement || !tooltipElement) return;\r\n    frameElement.current.addEventListener(\"mousemove\", (e) => {\r\n      tooltipElement.current.style.left = `${e.pageX}px`;\r\n      tooltipElement.current.style.top = `${e.pageY - 40}px`;\r\n    });\r\n  }, [frameElement, tooltipElement]);\r\n  return (\r\n    <Wrap ref={frameElement}>\r\n      <CenterDot />\r\n      {numbers.map((n) => (\r\n        <Dot key={n} n={n} />\r\n      ))}\r\n      {children}\r\n      <ToolTip ref={tooltipElement} className=\"tooltip\">\r\n        {getTimeFormat(myTime)}\r\n      </ToolTip>\r\n    </Wrap>\r\n  );\r\n};\r\nconst Wrap = styled.div`\r\n  position: relative;\r\n  height: 500px;\r\n  width: 500px;\r\n  border-radius: 500px;\r\n  border: 0.5rem solid #452821;\r\n  background-color: #fff8eb;\r\n  &:hover .tooltip {\r\n    display: block;\r\n  }\r\n`;\r\nconst ToolTip = styled.div`\r\n  display: none;\r\n  position: fixed;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  padding: 0.25rem;\r\n  font-size: 1.25rem;\r\n`;\r\nconst CenterDot = styled.div`\r\n  position: absolute;\r\n  top: 245px;\r\n  left: 245px;\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 10px;\r\n  background-color: black;\r\n`;\r\nexport default Frame;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nconst NiddleHour = ({ angle }) => {\r\n  return (\r\n    <Area angle={angle}>\r\n      <Top>\r\n        <Line />\r\n      </Top>\r\n      <Bottom />\r\n    </Area>\r\n  );\r\n};\r\nconst Area = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border-radius: 100%;\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: niddle-spin-hour infinite ${12 * 60 * 60}s linear;\r\n  }\r\n  @keyframes niddle-spin-hour {\r\n    from {\r\n      transform: ${({ angle }) => `rotate(${angle}deg)`};\r\n    }\r\n    to {\r\n      transform: ${({ angle }) => `rotate(${angle + 360}deg)`};\r\n    }\r\n  }\r\n`;\r\nconst Top = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  background-color: transparent;\r\n`;\r\nconst Bottom = styled.div`\r\n  flex: 1;\r\n  background-color: transparent;\r\n`;\r\nconst Line = styled.div`\r\n  width: 6px;\r\n  height: 50%;\r\n  background-color: black;\r\n`;\r\nexport default React.memo(NiddleHour);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nconst NiddleMinute = ({ angle }) => {\r\n  return (\r\n    <Area angle={angle}>\r\n      <Top>\r\n        <Line />\r\n      </Top>\r\n      <Bottom />\r\n    </Area>\r\n  );\r\n};\r\nconst Area = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border-radius: 100%;\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: niddle-spin-minute infinite ${60 * 60}s linear;\r\n  }\r\n  @keyframes niddle-spin-minute {\r\n    from {\r\n      transform: ${({ angle }) => `rotate(${angle}deg)`};\r\n    }\r\n    to {\r\n      transform: ${({ angle }) => `rotate(${angle + 360}deg)`};\r\n    }\r\n  }\r\n`;\r\nconst Top = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  background-color: transparent;\r\n`;\r\nconst Bottom = styled.div`\r\n  flex: 1;\r\n  background-color: transparent;\r\n`;\r\nconst Line = styled.div`\r\n  width: 4px;\r\n  height: 70%;\r\n  background-color: black;\r\n`;\r\nexport default React.memo(NiddleMinute);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nconst NiddleSecond = ({ angle }) => {\r\n  return (\r\n    <Area angle={angle}>\r\n      <Top>\r\n        <Line />\r\n      </Top>\r\n      <Bottom />\r\n    </Area>\r\n  );\r\n};\r\nconst Area = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border-radius: 100%;\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: niddle-spin-second infinite 60s linear;\r\n  }\r\n  @keyframes niddle-spin-second {\r\n    from {\r\n      transform: ${({ angle }) => `rotate(${angle}deg)`};\r\n    }\r\n    to {\r\n      transform: ${({ angle }) => `rotate(${angle + 360}deg)`};\r\n    }\r\n  }\r\n`;\r\nconst Top = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  background-color: transparent;\r\n`;\r\nconst Bottom = styled.div`\r\n  flex: 1;\r\n  background-color: transparent;\r\n`;\r\nconst Line = styled.div`\r\n  width: 2px;\r\n  height: 80%;\r\n  background-color: red;\r\n`;\r\nexport default NiddleSecond;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst SET_TIME = \"time/SET_TIME\";\r\n\r\nexport const setTime = createAction(SET_TIME, (date) => date);\r\nconst nowDate = new Date();\r\nconst initialState = {\r\n  hour: nowDate.getHours(),\r\n  minute: nowDate.getMinutes(),\r\n  second: nowDate.getSeconds(),\r\n};\r\n\r\nconst reducer = handleActions(\r\n  {\r\n    [SET_TIME]: (state, { payload: nextDate }) => {\r\n      const hour = nextDate.getHours();\r\n      const minute = nextDate.getMinutes();\r\n      const second = nextDate.getSeconds();\r\n      return { hour, minute, second };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default reducer;\r\n","import { useState } from \"react\";\nimport Container from \"./components/Container\";\nimport Frame from \"./components/Frame\";\nimport NiddleHour from \"./components/NiddleHour\";\nimport NiddleMinute from \"./components/NiddleMinute\";\nimport NiddleSecond from \"./components/NiddleSecond\";\nimport useClock from \"./hooks/useClock\";\nimport { getAngle } from \"./util\";\nconst TYPE = { HOUR: 0, MINUTE: 1, SECOND: 2 };\nfunction App() {\n  const [myTime] = useClock();\n  const [angle] = useState({\n    hour: getAngle(myTime, TYPE.HOUR),\n    minute: getAngle(myTime, TYPE.MINUTE),\n    second: getAngle(myTime, TYPE.SECOND),\n  });\n  return (\n    <Container>\n      <Frame>\n        <NiddleHour angle={angle.hour} />\n        <NiddleMinute angle={angle.minute} />\n        <NiddleSecond angle={angle.second} />\n      </Frame>\n    </Container>\n  );\n}\nexport default App;\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTime } from \"../modules/time\";\r\nconst ONE_SECOND = 1000;\r\nexport default function useClock() {\r\n  const dispatch = useDispatch();\r\n  const initialTime = useSelector((_) => _.time);\r\n  const [time] = useState(initialTime);\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      dispatch(setTime(new Date()));\r\n    }, ONE_SECOND);\r\n  }, [dispatch]);\r\n  return [time];\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import time from \"./time\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({ time });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules\";\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}